(() => {
  'use strict';
  
  try {
    const app = Application('OmniFocus');
    app.includeStandardAdditions = true;
    
    if (!app.running()) {
      throw new Error('OmniFocus is not running');
    }
    
    const taskIds = {{taskIds}};
    const doc = app.defaultDocument;
    
    const archived = [];
    const failed = [];
    
    // Get or create archive tag
    let archiveTag = doc.flattenedTags.whose({ name: 'Archive' })[0];
    if (!archiveTag) {
      archiveTag = doc.tags.push(app.Tag({ name: 'Archive' }));
    }
    
    for (const taskId of taskIds) {
      try {
        const task = doc.flattenedTasks.byId(taskId);
        if (!task || !task.id()) {
          failed.push(taskId);
          continue;
        }
        
        // Archive by completing the task
        task.completed = true;
        task.completionDate = new Date();
        
        // Add archive tag
        const currentTags = task.tags();
        currentTags.push(archiveTag);
        task.tags = currentTags;
        
        archived.push(taskId);
      } catch (e) {
        failed.push(taskId);
      }
    }
    
    return JSON.stringify({
      archived: archived,
      failed: failed
    });
    
  } catch (error) {
    return JSON.stringify({
      error: true,
      message: error.message,
      code: 'SCRIPT_ERROR',
      archived: [],
      failed: {{taskIds}} || []
    });
  }
})();