(() => {
  'use strict';
  
  // Utility function for safe property access - eliminates redundant try-catch blocks
  function safeGet(obj, prop, defaultValue = null) {
    try {
      // Direct property access is faster and more reliable in OmniFocus 4
      const value = obj[prop];
      return value !== undefined ? value : defaultValue;
    } catch (e) {
      return defaultValue;
    }
  }
  
  // Utility function for safe date conversion
  function safeDate(dateValue) {
    if (!dateValue) return null;
    try {
      return dateValue.toISOString();
    } catch (e) {
      return null;
    }
  }
  
  try {
    const app = Application('OmniFocus');
    app.includeStandardAdditions = true;
    
    if (!app.running()) {
      throw new Error('OmniFocus is not running');
    }
    
    const perspectives = [];
    
    // Add built-in perspectives
    const builtinPerspectives = [
      { id: 'inbox', name: 'Inbox', type: 'builtin', identifier: 'inbox' },
      { id: 'projects', name: 'Projects', type: 'builtin', identifier: 'projects' },
      { id: 'tags', name: 'Tags', type: 'builtin', identifier: 'tags' },
      { id: 'forecast', name: 'Forecast', type: 'builtin', identifier: 'forecast' },
      { id: 'flagged', name: 'Flagged', type: 'builtin', identifier: 'flagged' },
      { id: 'review', name: 'Review', type: 'builtin', identifier: 'review' },
      { id: 'completed', name: 'Completed', type: 'builtin', identifier: 'completed' }
    ];
    
    perspectives.push(...builtinPerspectives);
    
    // Try to get custom perspectives (Pro feature)
    // Note: OmniFocus 4 has JXA API changes that make perspective access difficult
    // For now, we'll add a note about this limitation
    try {
      const doc = app.defaultDocument;
      
      if (safeGet(doc, 'perspectives')) {
        const customPerspectives = safeGet(doc, 'perspectives');
        
        // Add a placeholder indicating custom perspectives exist but can't be enumerated
        if (customPerspectives && customPerspectives.length > 7) { // More than built-ins
          perspectives.push({
            id: 'custom_perspectives_placeholder',
            name: 'Custom Perspectives Available',
            type: 'info',
            note: `Found ${customPerspectives.length} total perspectives (${customPerspectives.length - 7} custom), but OmniFocus 4 JXA API limitations prevent detailed enumeration. Use built-in perspective names or OmniFocus interface to access custom perspectives.`
          });
        }
      }
    } catch (customPerspectiveError) {
      // Custom perspectives not available or API access issue
      perspectives.push({
        id: 'custom_perspectives_error',
        name: 'Custom Perspectives Status',
        type: 'info',
        note: 'Custom perspective access failed. This may be due to OmniFocus Standard edition (Pro required) or JXA API limitations in OmniFocus 4.'
      });
    }
    
    return JSON.stringify(perspectives);
    
  } catch (error) {
    return JSON.stringify({
      error: true,
      message: error.message,
      code: 'SCRIPT_ERROR'
    });
  }
})();